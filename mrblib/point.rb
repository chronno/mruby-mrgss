#============================================================================
# ** ::MRGSS
#----------------------------------------------------------------------------
#  This module contains all MRGSS Modules.
#============================================================================
module MRGSS
    #------------------------------------------------------------------------
    # * Point 
    #------------------------------------------------------------------------
    # This Class represents a bidimentional Point 
    #------------------------------------------------------------------------
    class Point
        #--------------------------------------------------------------------
        # Acessors
        #--------------------------------------------------------------------
        attr_accessor :x
        attr_accessor :y
        #--------------------------------------------------------------------
        # Equals
        #--------------------------------------------------------------------
        def ==(other) 
            return false unless other.is_a? MRGSS::Point
            return (@x == other.x and @y == other.y)
        end
        #--------------------------------------------------------------------
        # Plus
        #--------------------------------------------------------------------
        def +(other) 
            return false unless other.is_a? MRGSS::Point
            @x += other.x
            @y += other.y
            return self
        end
        #--------------------------------------------------------------------
        # Minus
        #--------------------------------------------------------------------
        def -(other) 
            return false unless other.is_a? MRGSS::Point
            @x -= other.x
            @y -= other.y
            return self
        end
    end
end